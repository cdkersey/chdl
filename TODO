CHDL Near-term Roadmap
======================

_ Multi-ported RAM
  . Separate read and write ports
    - Could represent multi-(read)-ported RAM by duplicating RAM and connecting
      the write ports together.
_ Technology mapping
_ Add utility programs to the chdl tree
  - What should I call them? chdl-nand2*? just nand2*?
_ Muli-ported RAM
  . Separate
_ Create a separate header for utility functions, integer math, etc.
  - like an int log2

Possible future features:
  _ Netlist reading
    - Make 
  _ Pass manager
    - Is there any reason to optimize in an order other than the one used by
      the optimize function?
    - Could technology mapping be handled by this same pass manager?
  _ NodeType enumeration
    - Why? Sure enumerations can be extended but that would just lead to many
      possible integers for each enum name.
    - So we can easily pass info about node types to e.g. print them in
      different ways. Might look prettier than RTTI.